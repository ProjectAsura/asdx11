//-----------------------------------------------------------------------------
// File : asdxFontRenderer.h
// Desc : Font Renderer
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes.
//-----------------------------------------------------------------------------
#include <cstdint>
#include <map>
#include <vector>
#include <d3d11.h>
#include <asdxRef.h>
#include <asdxMath.h>


namespace asdx {

///////////////////////////////////////////////////////////////////////////////
// Glyph structure
///////////////////////////////////////////////////////////////////////////////
struct Glyph
{
    Vector2 P0;         //!< 左上の位置座標.
    Vector2 P1;         //!< 右下の位置座標.
    Vector2 UV0;        //!< 左上のテクスチャ座標
    Vector2 UV1;        //!< 右下のテクスチャ座標
    float   Advance;    //!< 次の文字に進めるX方向の距離.
};

///////////////////////////////////////////////////////////////////////////////
// Font class
//////////////////////////////////////////////////////////////////////////////
class Font
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    Font();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~Font();

    //-------------------------------------------------------------------------
    //! @brief      バイナリをロードします.
    //! 
    //! @param[in]      pDevice     デバイスです.
    //! @param[in]      pContext    デバイスコンテキストです.
    //! @param[in]      path        ファイルパス.
    //! @retval true    ロードに成功.
    //! @retval false   ロードに失敗.
    //-------------------------------------------------------------------------
    bool Load(
        ID3D11Device* pDevice,
        ID3D11DeviceContext* pContext,
        const char* path,
        float fontSize);

    //-------------------------------------------------------------------------
    //! @brief      破棄処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      ベースラインからの上方向の高さを取得します.
    //! 
    //! @return     ベースラインからの上方向の高さを返却します.
    //-------------------------------------------------------------------------
    float GetAscent() const;

    //-------------------------------------------------------------------------
    //! @brief      ベースラインからの下方向の高さを取得します.
    //! 
    //! @return     ベースラインからの下方向の高さを返却します.
    //-------------------------------------------------------------------------
    float GetDescent() const;

    //-------------------------------------------------------------------------
    //! @brief      行間を取得します.
    //-------------------------------------------------------------------------
    float GetLineGap() const;

    //-------------------------------------------------------------------------
    //! @brief      フォントスケールを取得します.
    //-------------------------------------------------------------------------
    float GetScale() const;

    //-------------------------------------------------------------------------
    //! @brief      一行あたりの高さを取得します.
    //-------------------------------------------------------------------------
    float GetHeight() const;

    //-------------------------------------------------------------------------
    //! @brief      グリフを持つかどうかチェックします.
    //-------------------------------------------------------------------------
    bool HasGlyph(uint32_t code) const;

    //-------------------------------------------------------------------------
    //! @brief      グリフを取得します.
    //-------------------------------------------------------------------------
    Glyph GetGlyph(uint32_t code) const;

    //-------------------------------------------------------------------------
    //! @brief      テクスチャを取得します.
    //-------------------------------------------------------------------------
    ID3D11ShaderResourceView* GetSRV() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    float                               m_Ascent;
    float                               m_Descent;
    float                               m_LineGap;
    float                               m_Scale;
    float                               m_FontSize;
    std::map<uint32_t, Glyph>           m_Glyphs;
    RefPtr<ID3D11Texture2D>             m_Texture;
    RefPtr<ID3D11ShaderResourceView>    m_SRV;

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};


///////////////////////////////////////////////////////////////////////////////
// FontRenderer class
///////////////////////////////////////////////////////////////////////////////
class FontRenderer
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    FontRenderer();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~FontRenderer();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //-------------------------------------------------------------------------
    bool Init(ID3D11Device* pDevice, uint32_t maxSpriteCount, int w, int h);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      フォントを設定します.
    //-------------------------------------------------------------------------
    void SetFont(const Font* font);

    //-------------------------------------------------------------------------
    //! @brief      フォントを取得します.
    //-------------------------------------------------------------------------
    const Font* GetFont() const;

    //-------------------------------------------------------------------------
    //! @brief      カラーを設定します.
    //-------------------------------------------------------------------------
    void SetColor(float r, float g, float b, float a);

    //-------------------------------------------------------------------------
    //! @brief      カラーを設定します.
    //-------------------------------------------------------------------------
    void SetColor(const Vector4& color);

    //-------------------------------------------------------------------------
    //! @brief      カラーを取得します.
    //-------------------------------------------------------------------------
    Vector4 GetColor() const;

    //-------------------------------------------------------------------------
    //! @brief      スクリーンサイズを設定します.
    //-------------------------------------------------------------------------
    void SetScreenSize(int w, int h);

    //-------------------------------------------------------------------------
    //! @brief      スクリーンサイズを取得します.
    //-------------------------------------------------------------------------
    Vector2 GetScreenSize() const;

    //-------------------------------------------------------------------------
    //! @brief      描画を開始します.
    //-------------------------------------------------------------------------
    void Begin(ID3D11DeviceContext* pContext);

    //-------------------------------------------------------------------------
    //! @brief      文字列を描画します.
    //-------------------------------------------------------------------------
    void DrawString(int x, int y, const char* text);

    //-------------------------------------------------------------------------
    //! @brief      文字列を描画します.
    //-------------------------------------------------------------------------
    void DrawString(int x, int y, int z, const char* text);

    //-------------------------------------------------------------------------
    //! @brief      フォーマットを指定して文字列を描画します.
    //-------------------------------------------------------------------------
    void DrawFormat(int x, int y, const char* format, ...);

    //-------------------------------------------------------------------------
    //! @brief      フォーマットを指定して文字列を描画します.
    //-------------------------------------------------------------------------
    void DrawFormat(int x, int y, int z, const char* format, ...);

    //-------------------------------------------------------------------------
    //! @brief      描画を終了し，ドローコールを発行します.
    //-------------------------------------------------------------------------
    void End(ID3D11DeviceContext* pContext);

private:
    ///////////////////////////////////////////////////////////////////////////
    // Vertex structure
    ///////////////////////////////////////////////////////////////////////////
    struct Vertex
    {
        asdx::Vector3 Position;     //!< 位置座標です.
        asdx::Vector2 TexCoord;     //!< テクスチャ座標です.
        asdx::Vector4 Color;        //!< カラーです.
    };

    //=========================================================================
    // private variables.
    //=========================================================================
    const Font* m_Font;
    float       m_Scale;
    Vector4     m_Color;
    uint32_t    m_MaxSpriteCount;
    uint32_t    m_SpriteCount;
    Vector2     m_ScreenSize;
    Matrix      m_Transform;

    RefPtr<ID3D11VertexShader>  m_VS;
    RefPtr<ID3D11PixelShader>   m_PS;
    RefPtr<ID3D11Buffer>        m_VB;
    RefPtr<ID3D11Buffer>        m_IB;
    RefPtr<ID3D11Buffer>        m_CB;
    RefPtr<ID3D11InputLayout>   m_IL;
    std::vector<Vertex>         m_Vertices;

    //=========================================================================
    // private methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      スプライトを追加します.
    //-------------------------------------------------------------------------
    void AddSprite(float x, float y, float z, const Glyph& glyph);
};



} // namespace asdx
