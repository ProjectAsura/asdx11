//-----------------------------------------------------------------------------
// File : asdxStringView.h
// Desc : String View.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <cstring>


namespace asdx {

///////////////////////////////////////////////////////////////////////////////
// string_view class
///////////////////////////////////////////////////////////////////////////////
class string_view
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    string_view(const char* value)
    : m_Ptr (value)
    , m_Size(strlen(value))
    { /* DO_NOTHING */ }

    //-------------------------------------------------------------------------
    //! @brief      文字列取得.
    //-------------------------------------------------------------------------
    const char* c_str() const { return m_Ptr; }

    //-------------------------------------------------------------------------
    //! @brief      文字数取得.
    //-------------------------------------------------------------------------
    size_t size() const { return m_Size; }

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    const char*     m_Ptr   = nullptr;
    size_t          m_Size  = 0;

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};

} // namespace asdx
